from c_token import TokenType as T

FIRST = {
    'arg_list': {None, T.INT, T.FLOAT},
    'resto_arg_list': {T.COMMA, None},
    'type': {T.INT, T.FLOAT},
    'bloco': {T.OBRKT},
    'stmt_list': {None, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                  T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS,
                  T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT,
                  T.FLOAT},
    'stmt': {T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR, T.WHILE, T.IF,
             T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB, T.NUMINT,
             T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT},
    'ident_list': {T.IDENT},
    'resto_ident_list': {T.COMMA, None},
    'for_stmt': {T.FOR},
    'opt_expr': {None, T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT,
                 T.OPAR},
    'io_stmt': {T.SCAN, T.PRINT},
    'out': {T.STR, T.IDENT, T.NUMINT, T.NUMFLOAT},
    'resto_out_list': {T.COMMA, None},
    'while_stmt': {T.WHILE},
    'if_stmt': {T.IF},
    'else_part': {T.ELSE, None},
    'resto_atrib': {T.EQUAL, None},
    'resto_or': {None},
    'resto_and': {T.AND, None},
    'not': {T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'resto_rel': {T.LEQUAL, T.LESS, T.LESSEQ, T.BIGG, T.BIGGEQ, None},
    'resto_add': {T.PLUS, T.SUB, None},
    'resto_mult': {T.MULT, T.DIV, T.MOD, None},
    'uno': {T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'fator': {T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'function': {T.INT, T.FLOAT},
    'arg': {T.INT, T.FLOAT},
    'declaration': {T.INT, T.FLOAT},
    'out_list': {T.STR, T.IDENT, T.NUMINT, T.NUMFLOAT},
    'mult': {T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'add': {T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'rel': {T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'and': {T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'or': {T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'atrib': {T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR},
    'expr': {T.NOT, T.PLUS, T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR}
}

FOLLOW = {
    'function': {T.EOF},
    'arg_list': {T.CPAR},
    'arg': {T.COMMA, T.CPAR},
    'resto_arg_list': {T.CPAR},
    'type': {T.IDENT},
    'bloco': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
              T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB,
              T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT, T.EOF,
              T.CBRKT},
    'stmt_list': {T.CBRKT},
    'stmt': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
             T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB,
             T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT, T.CBRKT},
    'declaration': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                    T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS,
                    T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT,
                    T.FLOAT, T.CBRKT},
    'ident_list': {T.SEMICOLON},
    'resto_ident_list': {T.SEMICOLON},
    'for_stmt': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                 T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB,
                 T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT,
                 T.CBRKT},
    'opt_expr': {T.SEMICOLON},
    'io_stmt': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB,
                T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT,
                T.CBRKT},
    'out_list': {T.CPAR},
    'out': {T.COMMA, T.CPAR},
    'resto_out_list': {T.CPAR},
    'while_stmt': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                   T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS,
                   T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT,
                   T.FLOAT, T.CBRKT},
    'if_stmt': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS, T.SUB,
                T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT,
                T.CBRKT},
    'else_part': {T.ELSE, T.BREAK, T.CONTINUE, T.RETURN, T.SEMICOLON, T.FOR,
                  T.WHILE, T.IF, T.SCAN, T.PRINT, T.OBRKT, T.NOT, T.PLUS,
                  T.SUB, T.NUMINT, T.NUMFLOAT, T.IDENT, T.OPAR, T.INT, T.FLOAT,
                  T.CBRKT},
    'expr': {T.CPAR, T.SEMICOLON},
    'atrib': {T.CPAR, T.SEMICOLON},
    'resto_atrib': {T.CPAR, T.SEMICOLON},
    'or': {T.EQUAL, T.CPAR, T.SEMICOLON},
    'resto_or': {T.EQUAL, T.CPAR, T.SEMICOLON},
    'and': {T.EQUAL, T.CPAR, T.SEMICOLON},
    'resto_and': {T.EQUAL, T.CPAR, T.SEMICOLON},
    'not': {T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'rel': {T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'resto_rel': {T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'add': {T.LEQUAL, T.LDIFF, T.LESS, T.LESSEQ, T.BIGG, T.BIGGEQ, T.AND,
            T.EQUAL, T.CPAR, T.SEMICOLON},
    'resto_add': {T.LEQUAL, T.LDIFF, T.LESS, T.LESSEQ, T.BIGG, T.BIGGEQ, T.AND,
                  T.EQUAL, T.CPAR, T.SEMICOLON},
    'mult': {T.PLUS, T.SUB, T.LEQUAL, T.LDIFF, T.LESS, T.LESSEQ, T.BIGG,
             T.BIGGEQ, T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'resto_mult': {T.PLUS, T.SUB, T.LEQUAL, T.LDIFF, T.LESS, T.LESSEQ, T.BIGG,
                   T.BIGGEQ, T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'uno': {T.MULT, T.DIV, T.MOD, T.PLUS, T.SUB, T.LEQUAL, T.LDIFF, T.LESS,
            T.LESSEQ, T.BIGG, T.BIGGEQ, T.AND, T.EQUAL, T.CPAR, T.SEMICOLON},
    'fator': {T.SEMICOLON, T.MULT, T.DIV, T.MOD, T.PLUS, T.SUB, T.LEQUAL,
              T.LDIFF, T.LESS, T.LESSEQ, T.BIGG, T.BIGGEQ, T.AND, T.EQUAL,
              T.CPAR}
}
